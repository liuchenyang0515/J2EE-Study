<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goods">
    <select id="selectAll" resultType="com.me.mybatis.entity.Goods">
        select *
        from t_goods
        order by goods_id desc limit 10
    </select>
    <!-- 单参数传递，使用parameterType指定参数的数据类型即可，SQL中#{value}提取参数-->
    <select id="selectById" parameterType="Integer" resultType="com.me.mybatis.entity.Goods">
        select *
        from t_goods
        where goods_id = #{value}
    </select>
    <!-- 多参数传递时，使用parameterType指定Map接口，SQL中#{key}提取参数-->
    <select id="selectByPriceRange" parameterType="java.util.Map" resultType="com.me.mybatis.entity.Goods">
        select *
        from t_goods
        where current_price between #{min} and #{max}
        order by current_price limit 0, #{limit}
    </select>
    <!-- 利用LinkedHashMap保存多表关联结果
        MyBatis会将每一条记录包装为LinkedHashMap对象
        key是字段名，value是字段对应的值，字段类型根据表结构进行自动判断
        优点：易于扩展，易于使用
        缺点：太过灵活，无法进行编译时检查
    -->
    <select id="selectGoodsMap" resultType="java.util.LinkedHashMap">
        select g.*, c.category_name, '1' as test
        from t_goods g,
             t_category c
        where g.category_id = c.category_id
    </select>

</mapper>