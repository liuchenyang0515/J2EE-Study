<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mv="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--
        context:component-scan 标签作用
        在Spring IOC初始化过程中,自动创建并管理com.me.springmvc及子包中
        拥有以下注解的对象.
        @Repository
        @Service
        @Controller
        @Component
    -->
    <context:component-scan base-package="com.me.springmvc"></context:component-scan>
    <!--启用Spring MVC的注解开发模式-->
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters>
            <!-- 对于http响应文本进行转换 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 等同于servlet的response.setContextType("text/html;charset=utf-8") -->
                        <value>text/html;charset=utf-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 将图片/JS/CSS等静态资源排除在外,不拦截处理请求来的静态资源，可提高执行效率 -->
    <mvc:default-servlet-handler />
    <!-- 通知SpringMVC有哪些自定义的转换类 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.me.springmvc.converter.MyDateConverter"></bean>
            </set>
        </property>
    </bean>
    <!-- 启用freemarker模版引擎 -->
    <bean id="ViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <!-- 返回客户端时的字符集 -->
        <property name="contentType" value="text/html;charset=utf-8"/>
        <property name="suffix" value=".ftl"/>
    </bean>
    <!-- 告诉SpringMVC，freemarker加载路径在哪里 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!-- 模版加载的路径 -->
        <property name="templateLoaderPath" value="/WEB-INF/ftl" />
        <property name="freemarkerSettings">
            <props>
                <!-- 产生结果时的字符集 -->
                <prop key="defaultEncoding">UTF-8</prop>
            </props>
        </property>
    </bean>
</beans>